#!/usr/bin/env python 

import numpy as np
from matplotlib import pyplot as plt
import warnings
warnings.filterwarnings("ignore",".*GUI is implemented.*")

import rospy
from proyecto.msg import ArrayXY

#def plot_xy(msg):
#    plt.plot(msg.x, msg.y, 'b.')
#    plt.xlabel('x')
#    plt.ylabel('y')
#    plt.grid()
#    plt.axis("equal")
#    plt.draw()
#    plt.pause(1)
#    plt.hold(False)

   
#if __name__ == '__main__':
#    rospy.init_node("plotter_xy")
#    rospy.Subscriber("lidar_xy", ArrayXY, plot_xy)
#    plt.show()
#    rospy.spin()

ang= [0.0, 0.018, 0.035, 0.053, 0.07, 0.088, 0.105, 0.123, 0.14, 0.158, 0.175, 0.193, 0.21, 0.228, 0.245, 0.263, 0.28, 0.298, 0.315, 0.333, 0.35, 0.368, 0.385, 0.403, 0.42, 0.438, 0.455, 0.473, 0.49, 0.508, 0.525, 0.543, 0.56, 0.578, 0.595, 0.613, 0.63, 0.648, 0.665, 0.683, 0.7, 0.718, 0.735, 0.753, 0.77, 0.788, 0.805, 0.823, 0.84, 0.858, 0.875, 0.893, 0.91, 0.928, 0.945, 0.963, 0.98, 0.998, 1.015, 1.033, 1.05, 1.068, 1.085, 1.103, 1.12, 1.138, 1.155, 1.173, 1.19, 1.208, 1.225, 1.243, 1.26, 1.278, 1.295, 1.313, 1.33, 1.348, 1.365, 1.383, 1.4, 1.418, 1.435, 1.453, 1.47, 1.488, 1.505, 1.523, 1.54, 1.558, 1.575, 1.593, 1.61, 1.628, 1.645, 1.663, 1.68, 1.698, 1.715, 1.733, 1.75, 1.768, 1.785, 1.803, 1.82, 1.838, 1.855, 1.873, 1.89, 1.908, 1.925, 1.943, 1.96, 1.978, 1.995, 2.013, 2.03, 2.048, 2.065, 2.083, 2.1, 2.118, 2.135, 2.153, 2.17, 2.188, 2.205, 2.223, 2.24, 2.258, 2.275, 2.293, 2.31, 2.328, 2.345, 2.363, 2.38, 2.398, 2.415, 2.433, 2.45, 2.468, 2.485, 2.503, 2.52, 2.538, 2.555, 2.573, 2.59, 2.608, 2.625, 2.643, 2.66, 2.678, 2.695, 2.713, 2.73, 2.748, 2.765, 2.783, 2.8, 2.818, 2.835, 2.853, 2.87, 2.888, 2.905, 2.923, 2.94, 2.958, 2.975, 2.993, 3.01, 3.028, 3.045, 3.063, 3.08, 3.098, 3.115, 3.133]
med= [3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 1.157, 1.136, 1.112, 1.089, 1.082, 1.069, 1.081, 1.072, 1.086, 1.094, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 0.853, 0.848, 0.832, 0.841, 0.843, 0.852, 0.857, 0.853, 0.869, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0]
med_f= [3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 1.143, 1.134, 1.11, 1.09, 1.088, 1.077, 1.082, 1.081, 1.087, 1.094, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 0.854, 0.845, 0.839, 0.846, 0.848, 0.848, 0.852, 0.859, 0.872, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0]
pos_person= [0.072, 1.483]

x = med_f*np.cos(ang) + 0.0
y = med_f*np.sin(ang) + 0.5

plt.subplot(121)
plt.plot(ang,med, 'b',ang,med_f,'r--')
plt.xlabel('Angulo(rad)')
plt.ylabel('Distancia medida')
plt.grid()
plt.subplot(122)
plt.plot(x,y,'b',pos_person[0],pos_person[1],'r*')
plt.xlabel('Posicion X')
plt.ylabel('Posicion Y')
plt.grid()
plt.show()
