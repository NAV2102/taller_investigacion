#!/usr/bin/env python


import time
import roslib; roslib.load_manifest('ur_driver')
import rospy
import actionlib
import numpy as np
from control_msgs.msg import *
from trajectory_msgs.msg import *

pi = np.pi

if __name__ == '__main__':
    
    rospy.init_node("test1")
    
    topic = 'follow_joint_trajectory'
    pub = rospy.Publisher(topic, JointTrajectory, queue_size=10)
    g =  = 
    
    robot_client = actionlib.SimpleActionClient('follow_joint_trajectory', FollowJointTrajectoryAction)

    print("Waiting for server...")
    robot_client.wait_for_server()
    print("Connected to server")

    joint_names = ['shoulder_pan_joint', 'shoulder_lift_joint', 'elbow_joint', 'wrist_1_joint', 'wrist_2_joint', 'wrist_3_joint']
    Q0 = [0.0, -1.0, 1.7, -2.2, -1.6, 0.0]
    Q1 = [-pi/2, -1.0, 1.7, -2.2, -1.6, 0.0]
    
    q1 = np.linspace(-pi/4,-3*pi/4,10)
    q2 = np.linspace(-0.5,-1.5,10)
    q3 = np.linspace(0,2,10)
    q4 = np.linspace(-pi,0,10)
    q5 = np.linspace(-pi/4,pi/4,10)
    q6 = np.linspace(-pi/4,pi/4,10)
    
    g = FollowJointTrajectoryGoal()
    g.trajectory = JointTrajectory()
    g.trajectory.joint_names = joint_names

    # Initial position
    g.trajectory.points = [ JointTrajectoryPoint(positions=Q0, velocities=[0]*6,time_from_start=rospy.Duration(2.0))]
    robot_client.send_goal(g)
    robot_client.wait_for_result()
    rospy.sleep(1)
    
    i = 0
    c = 0
    rate = rospy.Rate(10)
    while not rospy.is_shutdown():
        robot_client.cancel_goal()
        
        Q = [q1[i], q2[i], q3[i], q4[i], q5[i], q6[i]]
        
        # Modification of the motion
        if c == 0:
            i = i + 1
            if i == 9:
                c = 1
        else:
            i = i - 1
            if i == 0:
                c = 0

	
        g.trajectory.points = [ JointTrajectoryPoint(positions=Q, velocities=[0]*6, time_from_start=rospy.Duration(1.0))]
        robot_client.send_goal(g)
        robot_client.wait_for_result()

        rate.sleep()

    robot_client.cancel_goal()
